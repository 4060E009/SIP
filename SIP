//範例網址(下載SDK)
https://voipsipsdk.com/products/voip-sip-sdk-for-android/features
https://voipsipsdk.com/Download/docs/ABTO_Software_VoIP_SIP_SIP_SDK_for_Android.pdf
============================================================================================
MainActivity.kt
**
package com.example.sip

import android.Manifest
import android.content.pm.PackageManager
import android.net.sip.SipManager
import android.os.Build
import android.os.Bundle
import androidx.appcompat.app.AppCompatActivity
import androidx.core.app.ActivityCompat
import androidx.core.content.ContextCompat
import org.abtollc.sdk.AbtoApplication
import org.abtollc.sdk.AbtoPhone
import org.abtollc.sdk.AbtoPhoneCfg
import org.abtollc.sdk.OnInitializeListener
import org.abtollc.utils.Log
import org.abtollc.utils.codec.Codec

var abtoPhone: AbtoPhone = TODO()
var REQUEST_CODE_ASK_MULTIPLE_PERMISSIONS = 124


abstract class MainActivity : AppCompatActivity(), OnInitializeListener {
    abstract val new: Any

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        abtoPhone = (application as AbtoApplication).abtoPhone
        val bCanStartPhoneInitialization = if (Build.VERSION.SDK_INT >= 23) askPermissions() else true
        if (bCanStartPhoneInitialization) initPhone()


    }

    private fun initPhone() {
        abtoPhone.setInitializeListener(this)
        val config: AbtoPhoneCfg = abtoPhone.getConfig()
        config.setCodecPriority(Codec.PCMU, 200.toShort())
        config.setCodecPriority(Codec.PCMA, 100.toShort())
        config.setCodecPriority(Codec.H264, 220.toShort())
        config.setCodecPriority(Codec.H263_1998, 210.toShort())
        config.sipPort = 0
        config.setSignallingTransport(AbtoPhoneCfg.SignalingTransportType.UDP)
        Log.setLogLevel(5)
        Log.setUseFile(true)
        abtoPhone.initialize(true)

    }

    private fun askPermissions(): Boolean {
        val permissionsNeeded: ArrayList<String> = ArrayList<String>()
        val permissionsList: ArrayList<String> = ArrayList<String>()

        if (!addPermission(permissionsList, Manifest.permission.RECORD_AUDIO)) {
            permissionsNeeded.add("RECORD_AUDIO")
        }
        if (!addPermission(permissionsList, Manifest.permission.WRITE_EXTERNAL_STORAGE)) {
            permissionsNeeded.add("WRITE_EXTERNAL_STORAGE")
        }
        if (!addPermission(permissionsList, Manifest.permission.CAMERA)) {
            permissionsNeeded.add("CAMERA")
        }
        if (!addPermission(permissionsList, Manifest.permission.USE_SIP)) {
            permissionsNeeded.add("USE_SIP")
        }
        if (permissionsList.size > 0) {
            if (permissionsNeeded.size > 0) {
                ActivityCompat.requestPermissions(this, permissionsList.toTypedArray(), REQUEST_CODE_ASK_MULTIPLE_PERMISSIONS)
                return false
            }
            ActivityCompat.requestPermissions(this, permissionsList.toTypedArray(), REQUEST_CODE_ASK_MULTIPLE_PERMISSIONS)
            return false
        }
        return true

    }

    private fun addPermission(permissionsList: ArrayList<String>, permission: String): Boolean {
        if (ContextCompat.checkSelfPermission(this, permission) != PackageManager.PERMISSION_GRANTED) {
            permissionsList.add(permission)
            // Check for Rationale Option
            if (!ActivityCompat.shouldShowRequestPermissionRationale(this, permission)) {
                return false
            }
        }
        return true
    }
}
============================================================================================
ManiFest.xml
**
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.sip">

    <uses-permission android:name="android.permission.READ_CONTACTS" />         <!--網路範例-->



    <uses-permission android:name="android.permission.INTERNET"/>

    <uses-permission android:name="android.permission.RECORD_AUDIO"/>

    <uses-permission android:name="android.permission.WAKE_LOCK"/>

    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>

    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE"/>

    <!-- required for 'disable registration' mode -->


    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>

    <!-- write logs -->


    <uses-permission android:name="android.permission.BLUETOOTH"/>

    <uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS"/>

    <!-- speaker mode -->


    <uses-permission android:name="android.permission.CAMERA"/>

    <uses-permission android:name="android.permission.USE_SIP"/>

    <uses-permission android:name="android.permission.CONFIGURE_SIP"/>

    <uses-permission android:name="android.permission.READ_PHONE_STATE"/>


<!--    <uses-permission android:name="android.permission.MANAGER"/>-->
<!--    <uses-permission android:name="android.permission.ANSWER_PHONE_CALLS"/>-->

    <!-- android 4 -->


    <uses-permission android:name="android.permission.VIBRATE"/>

    <uses-permission android:name="android.permission.REQUEST_IGNORE_BATTERY_OPTIMIZATIONS"/>

    <uses-permission android:name="android.permission.USE_FULL_SCREEN_INTENT"/>

    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED"/>

    <uses-feature android:name="android.hardware.wifi" android:required="false"/>

    <uses-feature android:name="android.hardware.microphone" android:required="true"/>

    <uses-feature android:name="android.hardware.touchscreen" android:required="false"/>

    <uses-feature android:name="android.hardware.bluetooth" android:required="false"/>

    <uses-feature android:name="android.hardware.screen.portrait" android:required="false"/>

    <uses-feature android:name="android.hardware.camera" android:required="false"/>

    <uses-feature android:name="android.hardware.camera.autofocus" android:required="false"/>

    <uses-feature android:name="android.hardware.camera.flash" android:required="false"/>

    <uses-feature android:name="android.hardware.camera.front" android:required="false"/>


    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.SIP"

        android:name="org.abtollc.sdk.AbtoNotificationApplication">
        <activity android:name=".MainActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <action android:name="org.abtollc.service.ABTOSipService" />
                <action android:name="org.abtollc.service.SipConfiguration" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <service
            android:name="org.abtollc.service.ABTOSipService"
            android:stopWithTask="true">
            <intent-filter>
                <action android:name="org.abtollc.service.ABTOSipService" />
                <action android:name="org.abtollc.service.SipConfiguration" />
            </intent-filter>
        </service>

        <provider android:name="org.abtollc.db.DBProvider"
            android:authorities="abto.com.sdktest"/>
        <meta-data android:name="AbtoVoipAuthority" android:value="abto.com.sdktest" />

    </application>
</manifest>
============================================================================================
gradle(SIP)
**
// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = "1.5.21"
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.2.2"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files

//        sip
         'org.abtollc.sdk.AbtoApplication'
         'org.abtollc.sdk.AbtoPhone'
         'org.abtollc.sdk.AbtoPhoneCfg'
         'org.abtollc.sdk.OnInitializeListener'
         'org.abtollc.utils.Log'
         'org.abtollc.utils.codec.Codec'
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        jcenter() // Warning: this repository is going to shut down soon

    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
============================================================================================
gradle(SIP.app)
**
plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.example.sip"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    //sip
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation files('aars/abto_android_voip_sdk.aar')

}
